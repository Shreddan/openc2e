name: build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]

env:
  CTEST_OUTPUT_ON_FAILURE: TRUE
  # GitHub runners have two cores each
  MAKEFLAGS: -j3
  # set some variables for Visual Studio
  MultiProcessorCompilation: true
  UseMultiToolTask: true
  EnforceProcessCountAcrossBuilds: true

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest,ubuntu-latest,macos-latest]
    steps:
    - name: "Check out source"
      uses: actions/checkout@v2
    - name: "Install dependencies (Ubuntu)"
      if: "startsWith(matrix.os, 'ubuntu-')"
      run: sudo apt-get update && sudo apt-get install bison libpng-dev libsdl2-dev libsdl2-mixer-dev libutf8proc-dev zlib1g-dev
    - name: "Set environment variables (Windows)"
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" || exit
        set >> $GITHUB_ENV || exit
    - name: "Configure"
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - name: "Build"
      run: cmake --build build --config RelWithDebInfo
    - name: "Test"
      run: cd build && ctest --build-config RelWithDebInfo
    - name: "Create distribution artifact"
      if: runner.os == 'Windows' || runner.os == 'macOS'
      run: cmake --install build --config RelWithDebInfo --prefix "openc2e-${{ github.sha }}-${{ runner.os }}"
    - name: "Upload distribution artifact"
      if: runner.os == 'Windows' || runner.os == 'macOS'
      uses: actions/upload-artifact@v1
      with:
        name: openc2e-${{ github.sha }}-${{ runner.os }}.zip
        path: openc2e-${{ github.sha }}-${{ runner.os }}
